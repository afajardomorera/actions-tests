name: Autoapprove PR
on:
  issue_comment:
    types: [created]
jobs:
  create-branch-pr-merge:
    runs-on: ubuntu-latest
    
    steps:
      - id: checkout
        name: Check Out y cambio a rama dev
        uses: actions/checkout@v3
        
      - name: get_timestamp
        id: get_timestamp
        run: |
          echo $(date +'%Y%m%d%H%M%S')
          echo "nombre=deploy$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
      
      - name: create new branch
        id: create_branch
        run: |
          BRANCH_NAME=${{ steps.get_timestamp.outputs.nombre }}
          echo rama=$BRANCH_NAME >> $GITHUB_OUTPUT
          git checkout -b $BRANCH_NAME
          git push -u origin $BRANCH_NAME
      
      - id: register_last_deploy
        name: Registrar autor del commit
        run: echo ${{ github.actor }} " -> " ${{ steps.create_branch.outputs.rama }} > LAST_DEPLOY_BY_COMMENT
      
      - name: Crear PR
        id: pr_creation
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Automated Pull Request
          branch: auto-${{ env.GITHUB_SHA }}
          title: Automated Pull Request
          body: Pull Request created automatically
      
      - name: Wait for checks
        uses: actions/github-script@0.5.0
        with:
          script: |
            const pr = context.payload.pull_request;
            const octokit = new GitHub(process.env.GITHUB_TOKEN);
            while (true) {
              const statuses = octokit.repos.listStatusesForRef({
                owner: pr.base.repo.owner.login,
                repo: pr.base.repo.name,
                ref: pr.head.sha
              });
              cons success = statuses.data.some(status => status.state === "success");
              if(success){
                break;
              }
              console.log("Waiting for checks to complete...");
              await new Promise(resolve => setTimeout(resolve,10000));
            }
            
      - uses: reitermarkus/automerge@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          merge-method: squash
          pull-request: ${{ steps.pr_creation.outputs.pull-request-number }}
