name: Process EKS deployment

on:
  issue_comment:
    types: [created]

env:
  NAMESPACE: DEFAULT_NAMESPACE
  IMAGE_TO_DEPLOY: DEFAULT_IMAGE
  ENTORNO: DEFAULT_ENVIRONMENT 
  RESPONSE_MESSAGE: 'Deployment Process In Progress'
  PROCESS_STATUS: OK
  HELM_INVOCATION_EVENT: 'SECRET - Nombre del evento que dispara el workflow definido en el repo de Helm'
  HELM_REPO: 'SECRET - Nombre del repositorio de Helm'
  HELM_ORG: 'SECRET - Nombre de la organizaciÃ³n a la que pertenece el repositorio indicado en HELM_REPO'
  SERVICE_TOKEN: 'SECRET - Token del usuario de servicio creado en HELM_REPO.'
  ECR_REPOSITORTY: ECR_REPO

jobs:
  process-deployment-command:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
      - name: simula_precondicion_label_ready_for_deploy
        if: ${{ success() }}
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: READY_FOR_DEPLOY

      - id: previous_checks_passed
        if: "!contains(github.event.issue.labels.*.name, 'READY_FOR_DEPLOY')"
        run: |
          echo "RESPONSE_MESSAGE='The PR previous checks are still in progress or they have not finished successfully'" >> $GITHUB_ENV
          echo "PROCESS_STATUS=KO" >> $GITHUB_ENV          
    
      - uses: jungwinter/split@v2
        id: split
        name: split_deployment_comment
        if: env.PROCESS_STATUS == 'OK'
        with:
          msg: ${{ github.event.comment.body }}
      
      - id: show_comment_elements
        name: show_comment_elements
        run: |
          echo "Process status: " $PROCESS_STATUS
          echo "Deployment Command: " ${{ steps.split.outputs._0 }}
          echo "Namespace option: " ${{ steps.split.outputs._1 }}
          echo "Target Namespace for deployment: " ${{ steps.split.outputs._2 }}
          echo "Environment option: " ${{ steps.split.outputs._3 }}
          echo "Target environment for deployment: " ${{ steps.split.outputs._4 }}
          echo "Image option: " ${{ steps.split.outputs._5 }}
          echo "Image for deployment: " ${{ steps.split.outputs._6 }}
      
      - id: validate_deployment_command
        name: validate_deployment_command
        if: env.PROCESS_STATUS == 'OK' && steps.split.outputs._0 != '/deploy-EKS'
        run: |
          echo "RESPONSE_MESSAGE='The added comment is not a valid EKS deployment command'" >> $GITHUB_ENV
          echo "PROCESS_STATUS=KO" >> $GITHUB_ENV          
      
      - id: process_comment_values_with_image
        name: process_comment_values_with_image
        if: env.PROCESS_STATUS == 'OK' && steps.split.outputs._1 == '--ns' && steps.split.outputs._3 == '--env' && steps.split.outputs._4 == 'DES' && steps.split.outputs._5 == '--image' && steps.split.outputs._6 != null
        run: |
          echo "NAMESPACE=${{ steps.split.outputs._2 }}" >> $GITHUB_ENV
          echo "ENTORNO=${{ steps.split.outputs._4 }}" >> $GITHUB_ENV"
          echo "IMAGE_TO_DEPLOY=${{ steps.split.outputs._6 }}" >> $GITHUB_ENV
      
      - id: process_comment_values_without_image
        name: process_comment_values_without_image
        if: env.PROCESS_STATUS == 'OK' && steps.split.outputs._1 == '--ns' && steps.split.outputs._3 == '--env' && steps.split.outputs._5 != '--image'
        run: |
          echo "NAMESPACE=${{ steps.split.outputs._2 }}" >> $GITHUB_ENV
          echo "ENTORNO=${{ steps.split.outputs._4 }}" >> $GITHUB_ENV"
          echo "IMAGE_TO_DEPLOY=LATEST" >> $GITHUB_ENV
      
      - id: current_status
        name: current_status
        run: |
          echo "Process status1: " ${{ env.PROCESS_STATUS }}
          echo "Process status2: " $PROCESS_STATUS
      
      - id: validate_deployment_command_namespace
        name: validate_deployment_command_namespace
        if: env.PROCESS_STATUS == 'OK' && env.NAMESPACE == 'DEFAULT_NAMESPACE'
        run: |
          echo "RESPONSE_MESSAGE=Namespace not informed" >> $GITHUB_ENV
          echo "PROCESS_STATUS=KO" >> $GITHUB_ENV
      
      - id: validate_deployment_command_environment
        name: validate_deployment_command_environment
        if: env.PROCESS_STATUS == 'OK' && env.ENTORNO == 'DEFAULT_ENVIRONMENT'
        run: |
          echo "RESPONSE_MESSAGE=Environment not informed or its value is not DES" >> $GITHUB_ENV
          echo "PROCESS_STATUS=KO" >> $GITHUB_ENV
      
      - id: validate_deployment_command_image
        name: validate_deployment_command_image
        if: env.PROCESS_STATUS == 'OK' && env.IMAGE_TO_DEPLOY == 'DEFAULT_IMAGE'
        run: |
          echo "RESPONSE_MESSAGE=The --image option has been informed but without value" >> $GITHUB_ENV
          echo "PROCESS_STATUS=KO" >> $GITHUB_ENV

      - id: add_process_message
        name: add_process_message
        uses: actions/github-script@v4
        with:
          script: |
            github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: process.env.RESPONSE_MESSAGE,
            }); 
